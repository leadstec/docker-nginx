# /etc/nginx/nginx.conf

user nginx;

daemon  off;

# Set number of worker processes automatically based on number of CPU cores.
worker_processes {{NGINX_WORKER_PROCESSES}};

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;

# Configures default error logger.
error_log /data/log/nginx/error.log warn;

# Includes files with directives to load dynamic modules.
include /etc/nginx/modules/*.conf;


events {
	# The maximum number of simultaneous connections that can be opened by
	# a worker process.
	worker_connections  {{NGINX_WORKER_CONNECTIONS}};
}

http {
	# Includes mapping of file name extensions to MIME types of responses
	# and defines the default type.
	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	# Name servers used to resolve names of upstream servers into addresses.
	# It's also needed when using tcpsocket and udpsocket in Lua modules.
	#resolver 208.67.222.222 208.67.220.220;

	# Don't tell nginx version to clients.
	server_tokens off;

	# Specifies the maximum accepted body size of a client request, as
	# indicated by the request header Content-Length. If the stated content
	# length is greater than this size, then the client receives the HTTP
	# error code 413. Set to 0 to disable.
	client_max_body_size {{NGINX_CLIENT_MAX_BODY_SIZE}};

	# Timeout for keep-alive connections. Server will close connections after
	# this time.
	keepalive_timeout {{NGINX_KEEPALIVE_TIMEOUT}};

	# Sendfile copies data between one FD and other from within the kernel,
	# which is more efficient than read() + write().
	sendfile on;

	# Don't buffer data-sends (disable Nagle algorithm).
	# Good for sending frequent small bursts of data in real time.
	tcp_nodelay on;

	# Causes nginx to attempt to send its HTTP response head in one packet,
	# instead of using partial frames.
	#tcp_nopush on;


	# Path of the file with Diffie-Hellman parameters for EDH ciphers.
	#ssl_dhparam /etc/ssl/nginx/dh2048.pem;

	# Specifies that our cipher suits should be preferred over client ciphers.
	ssl_prefer_server_ciphers on;

	# Enables a shared SSL cache with size that can hold around 8000 sessions.
	ssl_session_cache shared:SSL:2m;

	types_hash_max_size {{NGINX_TYPES_HASH_MAX_SIZE}};

	#NGINX_GZIP_FALSE_ERASE_START
	# Enable gzipping of responses.
	gzip  on;

	# Set the Vary HTTP header as defined in the RFC 2616.
	gzip_vary on;

	# Enable checking the existence of precompressed files.
	#gzip_static on;	

	# Compression level (1-9)
	gzip_comp_level  5;
	# Don't compress anything under 256 bytes
	gzip_min_length 256;

	# Compress output of these MIME-types
	gzip_types
		application/atom+xml
		application/javascript
		application/json
		application/rss+xml
		application/vnd.ms-fontobject
		application/x-font-ttf
		application/x-javascript
		application/x-web-app-manifest+json
		application/xhtml+xml
		application/xml
		font/opentype
		image/svg+xml
		image/x-icon
		text/css
		text/plain
		text/javascript
		text/x-component;
	# Disable gzip for bad browsers
	gzip_disable  "MSIE [1-6]\.(?!.*SV1)";
	#NGINX_GZIP_FALSE_ERASE_END

	# Specifies the main log format.
	log_format main '$remote_addr - $remote_user [$time_local] "$request" '
			'$status $body_bytes_sent "$http_referer" '
			'"$http_user_agent" "$http_x_forwarded_for"';

	# Sets the path, format, and configuration for a buffered log write.
	access_log /data/log/nginx/access.log  main;


	# Includes virtual hosts configs.
	include /etc/nginx/conf.d/*.conf;
}
